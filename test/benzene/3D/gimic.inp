# NEW INPUT

calc=cdens          # cdens, integral, edens, divj
## dryrun=on    # don't actually calculate (good for tuning grids, etc.)
title=""
basis="../MOL"
xdens="../XDENS"
debug=1           # debug print level
openshell=false 
## show_axis=true   # mark "up" axis in .xyz files
# magnet_axis=-z #[-] i,j,k || x,y,z -> align magnet along axis
magnet_axis=X #[-] i,j,k || x,y,z -> align magnet along axis
#magnet=[0.0, -1.0, 0.0]   # magnet vector
##scale_vectors=1.0

## For edens only currently
#density="dens"
#morange=[0, 0]
#mofile="mos"

# grid type can be: base/std, bond or file (see examples below)
Grid(base) {                    # define grid orthogonal to a bond 
    type=even                  # gauss distribution of grid points
    origin=[-8.0, -8.0, -8.0]   # origin of grid
    ivec=[1.0, 0.0, 0.0]        # basis vector i
    jvec=[ 0.0, 1.0, 0.0]       # basis vector j ( k = i x j )
    lengths=[16.0, 16.0, 16.0]   # lenthts of (i,j,k)
#   spacing=[0.5, 0.5, 0.5]     # spacing of points on grid (i,j,k)
    grid_points=[30, 30, 30]       # number of gridpoints on grid (i,j,k)
#   rotation=[0.0,0.0,0.0]      # Rotation of (i,j,k) -> (i',j',k') in deg
}

Advanced {
    lip_order=5      # order of Lagrange Interpolating Polynominals to use
    spherical=off     # don't touch, unless you REALLY know what you are doing
    diamag=on           # turn on/off diamagnetic contributions
    paramag=on          # turn on/off paramagnetic contributions
    GIAO=on             # turn on/off GIAOs. Don't change unless you know why.
    screening=on        # use screening to speed up 
    screening_thrs=1.d-8   # Screening threshold
}

Essential {
    acid=on
}
##############################
## Grid example collection
##############################

# Grid(bond) {                    # define grid orthogonal to a bond 
#     type=gauss                  # gauss distribution of grid points
#     bond=[1,2]                  # atom indeces for bond
#     fixpoint=5
#     distance=1.5                # place grid 'distance' between atoms
#     gauss_order=9               # order for gauss quadrature
#     grid_points=[30,30,0]       # number of gridpoints on grid (i,j,k)
#     up=4.0
#     down=4.0
#     in=1.0
#     out=6.0
#     rotation=[0.0,0.0,0.0]      # Rotation of (i,j,k) -> (i',j',k') degrees
##    radius=1.0                  # round grid: cut off at radius
# }

## Read in grid from external file. 
# Grid(file) {   
#     file=gridfile.grd
# }

