# This jobscript takes three arguments: 
# $1 is the working directory for the calculation
# $2 is the number of tasks to execute at the same time
#
# check for their correct number:
# if [ ! $# == 2 ]; then
#   echo "Usage: $0 wrkdir ntasks duration"
#   exit
# fi

function checkIfEmpty() {
# usage: validateInput variable $variable 
local __inputVar=$1
local __inputValue="$2"
while [ -z "$__inputValue" ]
do
    printf "*** Variable \"$__inputVar\" empty ***\nPlease restart the script.\n"
    echo "If the error persists, file a bug report to maria.dimitrova@helsinki.fi or https://github.com/mariavd/gimic"; echo
    exit;
done

}


echo "SLURM_JOB_ID is" $SLURM_JOB_ID
echo 
echo "Current profile calculation"

# parallelization is ensured in a poor man's way
export OMP_NUM_THREADS=1 

module load gimic

wrkdir=$( echo $1 )
checkIfEmpty wrkdir $wrkdir

dirname=$( echo ${wrkdir##*/} ) # removes everything before the backslash
checkIfEmpty dirname $dirname

#echo "Working directory:"; echo $wrkdir; echo

filenum=$( (cd $wrkdir && find . -maxdepth 1 -type f -name '*.inp' | wc -l))
checkIfEmpty filenum $filenum

# clean up possible previous calculations
rm -rf *eps GIMIC.*

parallel=$2
checkIfEmpty parallel $parallel

date
echo "Running $parallel out of $filenum GIMIC calculations at a time..."; echo 

whole=$( awk -v filenum=$filenum -v parallel=$parallel 'BEGIN{printf "%d\n", filenum/parallel}'  )
remain=$(awk -v whole=$whole -v filenum=$filenum -v parallel=$parallel 'BEGIN{printf "%d\n", (filenum-whole*parallel) }')

checkIfEmpty whole $whole
checkIfEmpty remain $remain

completed=0

for ((i=0; i<$whole; i++)) 	
do 
    for ((j=0; j<$parallel; j++))
    do  
	index=$(($i+$j*$whole))
	grepstring=""
	if [ -f "$wrkdir/gimic.$index.out" ]
	then
	    echo "The file $wrkdir/gimic.$index.out already exists."
	    grepstring=$(grep "wall" $wrkdir/gimic.$index.out)
	    echo "$grepstring"
	fi

	if [ -z "$grepstring" ]
	then
	    cd $wrkdir && gimic gimic.$index.inp > $wrkdir/gimic.$index.out & 
	fi
    done 
    wait
    completed=$(( $completed+$parallel ))
    date
    echo "$completed of $filenum completed"; echo
done

if [[ "$remain" -gt 0 ]]; then
    for ((i=0; i<$remain; i++))
    do  
	index=$(($parallel*$whole+$i))
	grepstring=""
	if [ -f "$wrkdir/gimic.$index.out" ]
	then
	    echo "The file $wrkdir/gimic.$index.out already exists."
	    grepstring=$(grep "wall" $wrkdir/gimic.$index.out)
	    echo "$grepstring"
	fi

	if [ -z "$grepstring" ]
	then
	    cd $wrkdir && gimic gimic.$index.inp > $wrkdir/gimic.$index.out & 
	fi
    done
fi
echo "$filenum of $filenum completed"
echo


rm -rf GIMIC* 

###################################################################################

# Calculating the gradient:
(cd $wrkdir && @SCRIPTS_DIR@/gradient.sh)

# Find the zeroes on the current profile plot
@SCRIPTS_DIR@/crit_pts.sh $wrkdir 

#######################################################################

# print some info like used time, disk, reserved memory and actual used memory
sacct -j $SLURM_JOB_ID --format=jobid,jobname,AllocNodes,AllocCPUs,CPUTime,MaxDiskRead,MaxDiskWrite
#sacct -a --format=elapsed,maxdiskwrite,reqmem,maxrss  -j $SLURM_JOB_ID

echo
